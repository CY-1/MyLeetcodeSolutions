class Solution:

    def ladderLength(self, beginWord: str, endWord: str, wordList) -> int:
        from collections import defaultdict
        l = len(beginWord)
        all_combo_dict = defaultdict(list)
        for word in wordList:
            for i in range(l):
                all_combo_dict[word[:i] + "*" + word[i + 1:]].append(word)
        queue = [(beginWord, 1)]
        visited = {beginWord: True}
        while queue:
            current, level = queue.pop(0)

            for i in range(l):
                intermediate_word = current[:i] + "*" + current[i + 1:]

                for word in all_combo_dict[intermediate_word]:
                    if word == endWord:
                        return level + 1
                    if word not in visited:
                        visited[word] = True
                        queue.append((word, level + 1))
                all_combo_dict[intermediate_word] = []

        return 0
# 广度优先搜索
