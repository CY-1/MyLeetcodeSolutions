class Solution(object):
    def findMin(self, nums):
        if len(nums) == 1:
            return nums[0]

        left = 0
        right = len(nums) - 1
        if nums[right] > nums[0]:
            return nums[0]
        while left<=right:
            mid=(right+left)//2
            if nums[mid] > nums[mid + 1]:
                return nums[mid + 1]
            if nums[mid - 1] > nums[mid]:
                return nums[mid]
            if nums[mid] > nums[0]:
                left = mid + 1
            else:
                right = mid - 1
# 改进的二分查找法
# 需要找到 数组中间旋转的点
#             if nums[mid] > nums[mid + 1]:              if nums[mid - 1] > nums[mid]:
# 意味找到了旋转点
# nums[mid] > nums[0] 判断旋转点再右
# 否则在左

