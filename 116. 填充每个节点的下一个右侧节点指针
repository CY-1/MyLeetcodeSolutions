"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution:
    def connect(self, root: 'Node') -> 'Node':
        result=[]
        def my(deepth,tree):

            if tree!=None:
                if len(result)<deepth+1:
                    result.append([])
                result[deepth].append(tree)
                my(deepth+1, tree.left)
                my(deepth+1, tree.right)
        my(0,root)
        for i in result:
            a=i[0]
            for j in range(1,len(i)):
                a.next=i[j]
                a=i[j]
                
            a.next=None
        return root
# 层序遍历的扩充
